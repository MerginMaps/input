<?xml version="1.0"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="uk.co.lutraconsulting"
    android:installLocation="auto"
    android:versionCode="@INPUT_VERSION_CODE@"
    android:versionName="@INPUT_VERSION@">

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/> <!-- Need due to a legacy storage migration -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.BLUETOOTH" android:maxSdkVersion="30" /> <!-- BT permission up to SDK 30-->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" android:maxSdkVersion="30" /> <!-- BT permission up to SDK 30-->
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.HIGH_SAMPLING_RATE_SENSORS"/> <!-- Reading compass while taking a picture -->

    <!-- Android considers EXIF data as sensitive (since they contain user's location), so we need to opt for permission ACCESS_MEDIA_LOCATION.
    Even though it is a runtime permission (one need to opt for it in code),
    it has no GUI element (is granted automatically without user's input, user do not see anything). -->
    <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION"/>

    <!-- %%INSERT_FEATURES -->
    <uses-feature android:name="android.hardware.bluetooth" android:required="false"/>
    <uses-feature android:name="android.hardware.camera.any" android:required="false"/>

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="true" />
    <!-- "preserveLegacyExternalStorage" is needed to support legacy storage migration -->
    <!-- "allowBackup" is suspicious, see https://developer.android.com/guide/topics/manifest/application-element#allowbackup -->
    <application 
        android:name="org.qtproject.qt.android.bindings.QtApplication"
        android:hardwareAccelerated="true"
        android:label="Mergin Maps"
        android:preserveLegacyExternalStorage="true" 
        android:allowNativeHeapPointerTagging="false"
        android:allowBackup="true"
        android:fullBackupOnly="false"
        android:icon="@mipmap/ic_merginmaps_launcher">
        <activity
            android:name="uk.co.lutraconsulting.InputActivity"
            android:configChanges="orientation|uiMode|screenLayout|screenSize|smallestScreenSize|layoutDirection|locale|fontScale|keyboard|keyboardHidden|navigation|mcc|mnc|density"
            android:label="Mergin Maps"
            android:launchMode="singleTop"
            android:screenOrientation="unspecified"
            android:exported="true"
            android:theme="@style/SplashScreenTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>

            <meta-data 
                android:name="android.app.lib_name" 
                android:value="-- %%INSERT_APP_LIB_NAME%% --" />

            <meta-data 
                android:name="android.app.arguments" 
                android:value="-- %%INSERT_APP_ARGUMENTS%% --" />

            <!-- Splash screen -->
            <meta-data 
                android:name="android.app.splash_screen_drawable" 
                android:resource="@drawable/splashscreen" />
            <meta-data 
                android:name="android.app.splash_screen_sticky" 
                android:value="true" />
            <!-- Splash screen -->

            <!-- Background running -->
            <!-- Warning: changing this value to true may cause unexpected crashes if the
                          application still try to draw after
                          "applicationStateChanged(Qt::ApplicationSuspended)"
                          signal is sent! -->
            <meta-data android:name="android.app.background_running" android:value="false"/>
            <!-- Background running -->

            <!-- extract android style -->
            <!-- available android:values :
                * default - In most cases this will be the same as "full", but it can also be something else if needed, e.g., for compatibility reasons
                * full - useful QWidget & Quick Controls 1 apps
                * minimal - useful for Quick Controls 2 apps, it is much faster than "full"
                * none - useful for apps that don't use any of the above Qt modules
                -->
            <meta-data 
                android:name="android.app.extract_android_style" 
                android:value="minimal" />
            <!-- extract android style -->
        </activity>

        <!-- Activity Android native camera -->
        <activity android:name="uk.co.lutraconsulting.CameraActivity" android:label="Input" android:parentActivityName="uk.co.lutraconsulting.InputActivity"
        android:configChanges="screenLayout|orientation|screenSize">
             <meta-data android:name="android.app.lib_name" android:value="-- %%INSERT_APP_LIB_NAME%% --"/>
        </activity>

        <activity android:process=":qt" android:name=".ScannerActivity" android:label="-- %%INSERT_APP_NAME%% --">
            <!-- android:process=":qt" is needed to force the service to run on a separate process than the Activity -->
          <meta-data android:name="android.app.lib_name" android:value="-- %%INSERT_APP_LIB_NAME%% --"/>
        </activity>
        
        <activity android:process=":qt" android:name=".InstallScannerActivity" android:label="-- %%INSERT_APP_NAME%% --">
            <!-- android:process=":qt" is needed to force the service to run on a separate process than the Activity -->
          <meta-data android:name="android.app.lib_name" android:value="-- %%INSERT_APP_LIB_NAME%% --"/>
        </activity>

        <provider android:name="androidx.core.content.FileProvider" android:authorities="uk.co.lutraconsulting.fileprovider" android:exported="false" android:grantUriPermissions="true">
             <meta-data android:name="android.support.FILE_PROVIDER_PATHS" android:resource="@xml/file_paths">
             </meta-data>
        </provider>

    </application>

    <!-- Explicitly mention that we need to use external app for capturing an image -->
    <queries>
      <intent>
        <action android:name="android.media.action.IMAGE_CAPTURE" />
      </intent>
    </queries>
</manifest>
