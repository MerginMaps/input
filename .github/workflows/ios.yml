name: Input iOS build
on: [push]
env:
  QT_DROPBOX_HASH: whdez6vfckulgxu
  QT_VERSION: 5.14.2
  SDK_DROPBOX_HASH: tg018hcj3n13xe8
  SDK_VERSION: 4
  IOS_PROVISIONING_PROFILE_UUID: 59aaa8d7-516a-4592-8c58-d7d1c1f81610
  KEYCHAIN: ${{ 'inputapp.keychain' }}
  XC_VERSION: ${{ '11.4' }}

jobs:
  mac_os_build:
    if: github.repository == 'lutraconsulting/input'
    runs-on: macos-latest
    steps:
      - name: Select latest Xcode
        run: "sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app"

      - uses: actions/checkout@v2

      - name: Install brew deps
        run: brew install gnupg

      - name: Configure Keychain
        run: |
          security create-keychain -p "" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings
          security list-keychains

      - name: Configure Code Signing
        env:
          IOS_GPG_KEY: ${{ secrets.IOS_GPG_KEY }}
          IOS_CERT_KEY: ${{ secrets.IOS_CERT_KEY }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$IOS_GPG_KEY" --output ./.github/secrets/ios/Certificates_ios_dist.p12 ./.github/secrets/ios/Certificates_ios_dist.p12.gpg
          security import "./.github/secrets/ios/Certificates_ios_dist.p12" -k "$KEYCHAIN" -P "$IOS_CERT_KEY" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          gpg --quiet --batch --yes --decrypt --passphrase="$IOS_GPG_KEY" --output ./.github/secrets/ios/LutraConsultingLtdInputAppStore.mobileprovision ./.github/secrets/ios/LutraConsultingLtdInputAppStore.mobileprovision.gpg
          cp ./.github/secrets/ios/LutraConsultingLtdInputAppStore.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/${IOS_PROVISIONING_PROFILE_UUID}.mobileprovision

      - name: Download and install input-sdk
        run: |
          DOWNLOAD_DIR=`pwd`
          curl -k -Lo $DOWNLOAD_DIR/input-sdk-${SDK_VERSION}.tar.gz "https://www.dropbox.com/s/${SDK_DROPBOX_HASH}/input-sdk-ios-${SDK_VERSION}.tar.gz?dl=0"
          mkdir -p /opt/INPUT/input-sdk-${SDK_VERSION}/stage
          cd /opt/INPUT/input-sdk-${SDK_VERSION}/stage
          tar -xvzf $DOWNLOAD_DIR/input-sdk-${SDK_VERSION}.tar.gz

          ls -la arm64/include/geodiff.h
          ls -la arm64/QGIS.app/Contents/Frameworks/qgis_core.framework

      - name: Download and install qt
        run: |
          DOWNLOAD_DIR=`pwd`
          curl -k -Lo $DOWNLOAD_DIR/qt-${QT_VERSION}-ios.tar.gz "https://www.dropbox.com/s/${QT_DROPBOX_HASH}/qt-${QT_VERSION}-ios.tar.gz?dl=0"
          mkdir -p /opt/Qt/${QT_VERSION}/ios
          cd /opt/Qt/${QT_VERSION}/ios
          tar -xvzf $DOWNLOAD_DIR/qt-${QT_VERSION}-ios.tar.gz

      - name: Create build system with qmake
        run: |
          INPUT_DIR=`pwd`

          # setup config environmen
          cp scripts/ci/config.pri app/config.pri

          mkdir -p ../build-INPUT
          cd ../build-INPUT

          # run qmake
          /opt/Qt/${QT_VERSION}/ios/bin/qmake \
            ${INPUT_DIR}/app/input.pro \
            -spec macx-ios-clang \
            CONFIG+=release \
            CONFIG+=iphoneos \
            CONFIG+=device \
            CONFIG+=qtquickcompiler \
            QMAKE_MAC_XCODE_SETTINGS+=qprofile \
            qprofile.name=PROVISIONING_PROFILE_SPECIFIER \
            qprofile.value="LutraConsultingLtd.Input.AppStore" \
            QMAKE_MAC_XCODE_SETTINGS+=qteam \
            qteam.name=DEVELOPMENT_TEAM \
            qteam.value=79QMH2QRAH \
            QMAKE_MAC_XCODE_SETTINGS+=qidentity \
            qidentity.name=CODE_SIGN_IDENTITY \
            qidentity.value="iPhone Distribution: LUTRA CONSULTING LIMITED (79QMH2QRAH)" \
            QMAKE_MAC_XCODE_SETTINGS+=qstyle \
            qstyle.name=CODE_SIGN_STYLE \
            qstyle.value=Manual

      - name: Build Input
        run: |
          INPUT_DIR=`pwd`
          cd ../build-INPUT

          xcodebuild \
            -project Input.xcodeproj/ \
            -scheme Input \
            -sdk iphoneos \
            -configuration Release \
            archive -archivePath Input.xcarchive \
            "OTHER_CODE_SIGN_FLAGS=--keychain '$KEYCHAIN'"

      - name: Create Input Package
        run: |
          INPUT_DIR=`pwd`
          cd ../build-INPUT
          xcodebuild \
            -archivePath Input.xcarchive \
            -exportOptionsPlist $INPUT_DIR/scripts/ci/ios/exportOptions.plist \
            -exportPath $PWD \
            -allowProvisioningUpdates \
            -exportArchive

      - name: Upload .ipa to dropbox
        env:
          INPUTAPP_BOT_GITHUB_TOKEN: ${{ secrets.INPUTAPP_BOT_GITHUB_TOKEN }}
          INPUTAPP_BOT_DROPBOX_TOKEN: ${{ secrets.INPUTAPP_BOT_DROPBOX_TOKEN }}
        if: success()
        run: |
          ./scripts/upload-artifacts-ios.bash ../build-INPUT/Input.ipa
